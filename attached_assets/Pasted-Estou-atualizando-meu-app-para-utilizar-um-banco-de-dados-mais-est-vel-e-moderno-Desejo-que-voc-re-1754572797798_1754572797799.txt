Estou atualizando meu app para utilizar um banco de dados mais est√°vel e moderno. Desejo que voc√™ realize as seguintes a√ß√µes com base nas instru√ß√µes abaixo.
________________________________________
üü¢ 1. CONECTAR O APP AO SUPABASE
Objetivo: usar o Supabase como meu banco principal.
‚û§ A√ß√µes esperadas:
‚Ä¢	Substitua a conex√£o atual com o banco de dados local do Replit por uma conex√£o PostgreSQL com Supabase.
‚Ä¢	A connection string deve vir da vari√°vel de ambiente DATABASE_URL, que irei adicionar ao meu .env.
Exemplo:
env
CopiarEditar
DATABASE_URL=postgres://usuario:senha@db.supabase.co:5432/nomedobanco
________________________________________
üß± 2. CONFIGURAR O DRIZZLE ORM PARA SUPABASE
‚û§ Ajustes necess√°rios:
‚Ä¢	Atualize o arquivo drizzle.config.ts para utilizar a nova DATABASE_URL vinda do Supabase.
‚Ä¢	Reconfigure o cliente do Drizzle (drizzle() + pg.Pool) para apontar corretamente para o Supabase.
________________________________________
üîê 3. REFATORAR AUTENTICA√á√ÉO PARA USAR O SUPABASE AUTH
‚û§ Desejo que o sistema:
‚Ä¢	Use login com Google (Gmail) via Supabase Auth.
‚Ä¢	Permita cadastrar e logar usu√°rios com:
o	name
o	email
o	role
o	(senha, se necess√°rio)
‚Ä¢	Ap√≥s o login/cadastro, gerar token de sess√£o (JWT) e armazenar os dados no Supabase.
‚û§ Integra√ß√£o:
‚Ä¢	Substitua a autentica√ß√£o local antiga por Supabase Auth.
‚Ä¢	Caso o Supabase Auth seja usado apenas para Google e o app precise manter autentica√ß√£o local (email/senha), armazene os dados no Supabase manualmente com Drizzle.
________________________________________
üßπ 4. SUGEST√ÉO DE LIMPEZA DE C√ìDIGO
Se o app estava usando autentica√ß√£o pr√≥pria (com bcrypt, passport, etc), sugiro:
‚û§ Arquivos e bibliotecas que podem ser removidos (caso n√£o sejam mais usados):
‚Ä¢	Middlewares ou helpers antigos de autentica√ß√£o
‚Ä¢	Rotas de login/cadastro antigas (com email/senha)
‚Ä¢	Uso de bcrypt, jsonwebtoken, etc, se for substitu√≠do totalmente por Supabase Auth
Pe√ßa confirma√ß√£o antes de excluir, mas prepare a limpeza para simplificar o projeto.
________________________________________
üìÅ ESTRUTURA DO APP ATUAL:
As pastas principais s√£o:
‚Ä¢	/client ‚Äì frontend
‚Ä¢	/server ‚Äì rotas e l√≥gica backend (Express)
‚Ä¢	/shared ‚Äì schemas Drizzle + valida√ß√µes Zod
‚Ä¢	/migrations ‚Äì migrations do Drizzle
‚Ä¢	.env ‚Äì conter√° a DATABASE_URL
________________________________________
üß™ 5. TESTES ESPERADOS:
‚Ä¢	Teste login com Google e certifique-se de que o usu√°rio √© armazenado corretamente.
‚Ä¢	Teste cria√ß√£o de servi√ßo com title e serviceType funcionando corretamente.
‚Ä¢	Teste permiss√µes conforme o role do usu√°rio.
‚Ä¢	Todos os dados devem ser lidos/escritos no Supabase (n√£o local).
________________________________________
‚úÖ RESUMO DO OBJETIVO
Ter um app funcional no Replit, com:
‚Ä¢	Banco de dados no Supabase (PostgreSQL)
‚Ä¢	Autentica√ß√£o com Google
‚Ä¢	Login e cadastro salvos corretamente no Supabase
‚Ä¢	Controle de permiss√µes por role
‚Ä¢	Drizzle ORM apontando para o Supabase
‚Ä¢	Sem depend√™ncia do banco local do Replit
‚Ä¢	C√≥digo limpo e sem arquivos antigos de autentica√ß√£o local (se n√£o usados)

